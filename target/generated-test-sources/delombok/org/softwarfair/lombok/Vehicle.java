// Generated by delombok at Sun May 25 14:06:16 BST 2014
package org.softwarfair.lombok;

import java.awt.*;
import java.util.List;

public final class Vehicle {

    enum Type {
        CAR,
        BUS,
        BIKE;

    }
    private final List<Wheel> wheels;
    private final int year;
    private final Color color;
    private final Type type;

    @java.lang.SuppressWarnings("all")
    Vehicle(final List<Wheel> wheels, final int year, final Color color, final Type type) {
        this.wheels = wheels;
        this.year = year;
        this.color = color;
        this.type = type;
    }

    @java.lang.SuppressWarnings("all")
    public static class VehicleBuilder {
        private List<Wheel> wheels;
        private int year;
        private Color color;
        private Type type;

        @java.lang.SuppressWarnings("all")
        VehicleBuilder() {
        }

        @java.lang.SuppressWarnings("all")
        public VehicleBuilder wheels(final List<Wheel> wheels) {
            this.wheels = wheels;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public VehicleBuilder year(final int year) {
            this.year = year;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public VehicleBuilder color(final Color color) {
            this.color = color;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public VehicleBuilder type(final Type type) {
            this.type = type;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public Vehicle build() {
            return new Vehicle(wheels, year, color, type);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "Vehicle.VehicleBuilder(wheels=" + this.wheels + ", year=" + this.year + ", color=" + this.color + ", type=" + this.type + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static VehicleBuilder builder() {
        return new VehicleBuilder();
    }

    @java.lang.SuppressWarnings("all")
    public List<Wheel> getWheels() {
        return this.wheels;
    }

    @java.lang.SuppressWarnings("all")
    public int getYear() {
        return this.year;
    }

    @java.lang.SuppressWarnings("all")
    public Color getColor() {
        return this.color;
    }

    @java.lang.SuppressWarnings("all")
    public Type getType() {
        return this.type;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Vehicle)) return false;
        final Vehicle other = (Vehicle)o;
        final java.lang.Object this$wheels = this.getWheels();
        final java.lang.Object other$wheels = other.getWheels();
        if (this$wheels == null ? other$wheels != null : !this$wheels.equals(other$wheels)) return false;
        if (this.getYear() != other.getYear()) return false;
        final java.lang.Object this$color = this.getColor();
        final java.lang.Object other$color = other.getColor();
        if (this$color == null ? other$color != null : !this$color.equals(other$color)) return false;
        final java.lang.Object this$type = this.getType();
        final java.lang.Object other$type = other.getType();
        if (this$type == null ? other$type != null : !this$type.equals(other$type)) return false;
        return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $wheels = this.getWheels();
        result = result * PRIME + ($wheels == null ? 0 : $wheels.hashCode());
        result = result * PRIME + this.getYear();
        final java.lang.Object $color = this.getColor();
        result = result * PRIME + ($color == null ? 0 : $color.hashCode());
        final java.lang.Object $type = this.getType();
        result = result * PRIME + ($type == null ? 0 : $type.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "Vehicle(" + this.getWheels() + ", " + this.getColor() + ", " + this.getType() + ")";
    }
}